// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: url.sql

package db

import (
	"context"
)

const createURL = `-- name: CreateURL :one
INSERT INTO urls (original_url) VALUES ($1)
RETURNING id, original_url, created_at
`

func (q *Queries) CreateURL(ctx context.Context, originalUrl string) (Url, error) {
	row := q.db.QueryRowContext(ctx, createURL, originalUrl)
	var i Url
	err := row.Scan(&i.ID, &i.OriginalUrl, &i.CreatedAt)
	return i, err
}

const getURLByID = `-- name: GetURLByID :one
SELECT id, original_url, created_at FROM urls WHERE id = $1
`

func (q *Queries) GetURLByID(ctx context.Context, id int32) (Url, error) {
	row := q.db.QueryRowContext(ctx, getURLByID, id)
	var i Url
	err := row.Scan(&i.ID, &i.OriginalUrl, &i.CreatedAt)
	return i, err
}

const getURLByShortCode = `-- name: GetURLByShortCode :one
SELECT urls.id, urls.original_url, urls.created_at FROM urls
JOIN redirects ON urls.id = redirects.url_id
WHERE redirects.short_code = $1
`

func (q *Queries) GetURLByShortCode(ctx context.Context, shortCode string) (Url, error) {
	row := q.db.QueryRowContext(ctx, getURLByShortCode, shortCode)
	var i Url
	err := row.Scan(&i.ID, &i.OriginalUrl, &i.CreatedAt)
	return i, err
}
